"""add development plan event type reference foreign key

Revision ID: 70cdd0c50132
Revises: 2cdebf46a015
Create Date: 2023-10-11 11:52:57.671095

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.orm.session import Session

from application.models import DevelopmentPlanEvent, DevelopmentPlanEventType


# revision identifiers, used by Alembic.
revision = "70cdd0c50132"
down_revision = "2cdebf46a015"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("development_plan_event", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column("development_plan_event_type_reference", sa.Text(), nullable=True)
        )
        batch_op.create_foreign_key(
            "development_plan_event_type_ref_fk",
            "development_plan_event_type",
            ["development_plan_event_type_reference"],
            ["reference"],
        )

    session = Session(bind=op.get_bind())
    events = session.query(DevelopmentPlanEvent).all()
    for event in events:
        event_type = DevelopmentPlanEventType.query.get(event.development_plan_event)
        if event_type is None:
            session.delete(event)
        else:
            event.development_plan_event_type_reference = event.development_plan_event
            session.add(event)
        session.commit()

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("development_plan_event", schema=None) as batch_op:
        batch_op.drop_constraint(
            "development_plan_event_type_ref_fk", type_="foreignkey"
        )
        batch_op.drop_column("development_plan_event_type_reference")

    # ### end Alembic commands ###
